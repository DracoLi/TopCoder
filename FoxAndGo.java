import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class FoxAndGo
{
	public int maxKill(String[] board)
	{
		int maxscore = 0;
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[i].length(); j++) {
				if (board[i].charAt(j) == '.') {
					String ori = board[i]; 
					board[i] = board[i].substring(0, j) + 'x' + board[i].substring(j+1);
					maxscore = Math.max(maxscore, calScore(board));
					board[i] = ori;
				}
			}
		}
		return maxscore;
	}
	
	public int calScore(String[] board) {
		boolean[][] visited = new boolean[20][20];
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[i].length(); j++) {
				if (board[i].charAt(j) == '.') {
					dfs(i, j, visited, board);
				}
			}
		}
		
		int score = 0;
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[i].length(); j++) {
				if (board[i].charAt(j) == 'o' && !visited[i][j]) {
					score++;
				}
			}
		}
		
		return score;
	}
	
	
	public void dfs(int x, int y, boolean[][] visited, String[] board)
	{
		if (visited[x][y]) return;
		
		visited[x][y] = true;
		int[][] dirs = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};
		for (int i = 0; i < 4; i++) {
			int nx = dirs[i][0] + x, ny = dirs[i][1] + y; 
			if (nx >= 0 && nx < board.length && ny >=0 && ny < board[0].length() && board[nx].charAt(ny) == 'o') {
				dfs(nx, ny, visited, board);
			}
		}
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		FoxAndGo obj;
		int answer;
		obj = new FoxAndGo();
		long startTime = System.currentTimeMillis();
		answer = obj.maxKill(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{".....","..x..",".xox.",".....","....."};
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"ooooo","xxxxo","xxxx.","xxxx.","ooooo"};
		p1 = 6;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{".xoxo","ooxox","oooxx","xoxox","oxoox"};
		p1 = 13;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{".......",".......",".......","xxxx...","ooox...","ooox...","ooox..."};
		p1 = 9;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{".......",".xxxxx.",".xooox.",".xo.ox.",".xooox.",".xxxxx.","......."};
		p1 = 8;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"o.xox.o","..xox..","xxxoxxx","ooo.ooo","xxxoxxx","..xox..","o.xox.o"};
		p1 = 12;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new String[]{".......","..xx...",".xooox.",".oxxox.",".oxxxo.","...oo..","......."};
		p1 = 4;
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 7 -----
		p0 = new String[]{".ox....","xxox...","..xoox.","..xoox.","...xx..",".......","......."};
		p1 = 5;
		all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 8 -----
		p0 = new String[]{"...................","...................","...o..........o....","................x..","...............x...","...................","...................","...................","...................","...................","...................","...................","...................","...................","................o..","..x................","...............x...","...................","..................."};
		p1 = 0;
		all_right = KawigiEdit_RunTest(8, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
