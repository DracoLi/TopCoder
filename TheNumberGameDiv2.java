import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheNumberGameDiv2
{
	HashMap<Integer, Boolean> map = new HashMap<Integer, Boolean>();
	
	public int minimumMoves(int A, int B)
	{
		HashMap<Integer, Integer> map2 = new HashMap<Integer, Integer>();
		Queue<Integer> q = new LinkedList<Integer>();
		q.add(A);
		while (!q.isEmpty()) {
			int val = q.remove();
			int[] j = { val / 10, reverse(val) };
			for (int i = 0; i < j.length; i++) {
				if (!map2.containsKey(j[i])) {
					int original = map2.containsKey(val) ? map2.get(val) : 0;
					map2.put(j[i], original + 1);
					q.add(j[i]);
				}
			}
		}
		
		return map2.containsKey(B) ? map2.get(B) : -1;
	}
	
	private int reverse(int s) {
		char[] rev = String.valueOf(s).toCharArray();
		for (int i = 0; i < rev.length/2; i++) {
			char temp = rev[i];
			int last = rev.length - 1 - i;
			rev[i] = rev[last];
			rev[last] = temp;
		}
		String reverseS = new String(rev);
		return Integer.valueOf(reverseS);		
	}
	
	public int minimumMoves2(int A, int B)
	{
		char[] rev = String.valueOf(A).toCharArray();
		for (int i = 0; i < rev.length/2; i++) {
			char temp = rev[i];
			int last = rev.length - 1 - i;
			rev[i] = rev[last];
			rev[last] = temp;
		}
		String reverseS = new String(rev);
		int reverse = Integer.valueOf(reverseS);
		
		if (reverse < B && A < B) return -1;
		
		if (A == B) return 0;
		
		int moves1 = -1;
		int moves2 = -1;
		if (reverse >= B && !map.containsKey(A)) {
			map.put(reverse, true);
			moves1 = minimumMoves(reverse, B);
		}
		
		if ((A / 10) >= B) {
			moves2 = minimumMoves(A / 10, B);
		}
		
		if (moves1 == -1 && moves2 == -1) return -1;
		else if (moves1 == -1) return moves2 + 1;
		else if (moves2 == -1) return moves1 + 1;
		
		return Math.min(moves1, moves2) + 1;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		TheNumberGameDiv2 obj;
		int answer;
		obj = new TheNumberGameDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.minimumMoves(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = 25;
		p1 = 5;
		p2 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 5162;
		p1 = 16;
		p2 = 4;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 334;
		p1 = 12;
		p2 = -1;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 218181918;
		p1 = 9181;
		p2 = 6;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 9798147;
		p1 = 79817;
		p2 = -1;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
